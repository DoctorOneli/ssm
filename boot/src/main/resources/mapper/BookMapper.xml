<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.freedom.boot.dao.BookMapper">
	<resultMap id="BaseResultMap" type="org.freedom.boot.bean.Book">
		<id column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="book_name" jdbcType="VARCHAR" property="bookName" />
		<result column="book_price" jdbcType="DECIMAL" property="bookPrice" />
		<result column="book_type_id" jdbcType="INTEGER" property="bookTypeId" />
		<result column="book_count" jdbcType="INTEGER" property="bookCount" />
		<result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
		<result column="shop_id" jdbcType="INTEGER" property="shopId" />
		<result column="book_cover" jdbcType="VARCHAR" property="bookCover" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="org.freedom.boot.bean.BookWithBLOBs">
		<result column="book_detail" jdbcType="LONGVARCHAR" property="bookDetail" />
		<result column="book_img" jdbcType="LONGVARCHAR" property="bookImg" />
		<result column="detail_img" jdbcType="LONGVARCHAR" property="detailImg" />
	</resultMap>

	<resultMap id="selectByExampleWithType" type="org.freedom.boot.bean.Book">
		<id column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="book_name" jdbcType="VARCHAR" property="bookName" />
		<result column="book_price" jdbcType="DECIMAL" property="bookPrice" />
		<result column="book_type_id" jdbcType="INTEGER" property="bookTypeId" />
		<result column="book_count" jdbcType="INTEGER" property="bookCount" />
		<result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
		<result column="book_cover" jdbcType="VARCHAR" property="bookCover" />
		<association property="bookType" column="book_type_id"
			javaType="org.freedom.boot.bean.BookType">
         <id column="book_type_id" property="bookTypeId"/>
         <result column="book_type_name"  property="typeName" />
		</association>

	</resultMap>




	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		book_id, book_name, book_price, book_type_id, book_count,
		book_author,
		shop_id, book_cover
	</sql>
	<sql id="Blob_Column_List">
		book_detail, book_img, detail_img
	</sql>

	<sql id="BookWithTypeList">
		`tp_book`.`book_id` AS `book_id`,
		`tp_book`.`book_name` AS
		`book_name`,
		`tp_book`.`book_price` AS `book_price`,
		`tp_book`.`book_img` AS `book_img`,
		`tp_book`.`book_author` AS
		`book_author`,
		`tp_book`.`book_cover` AS `book_cover`,
		`tp_book`.`detail_img` AS `detail_img`,
		`tp_book`.`book_detail` AS
		`book_detail`,
		`tp_book`.`book_type_id` AS `book_type_id`,
		`tp_book`.`book_count` AS `book_count`,
		`tp_book_type`.type_name AS `book_type_name`
	</sql>

	<select id="selectByExampleWithType" parameterType="org.freedom.boot.bean.BookExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="BookWithTypeList" />
		FROM
		( `tp_book` JOIN `tp_book_type` ON ( ( `tp_book`.`book_type_id` =
		`tp_book_type`.`book_type_id` ) ) )
		ORDER BY
		`tp_book`.`book_id`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>



	<select id="selectByExampleWithBLOBs" parameterType="org.freedom.boot.bean.BookExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tp_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="org.freedom.boot.bean.BookExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tp_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tp_book
		where book_id = #{bookId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tp_book
		where book_id = #{bookId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.freedom.boot.bean.BookExample">
		delete from tp_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.freedom.boot.bean.BookWithBLOBs">
		insert into tp_book (book_id,
		book_name, book_price,
		book_type_id, book_count, book_author,
		shop_id,
		book_cover, book_detail,
		book_img, detail_img)
		values
		(#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR},
		#{bookPrice,jdbcType=DECIMAL},
		#{bookTypeId,jdbcType=INTEGER},
		#{bookCount,jdbcType=INTEGER}, #{bookAuthor,jdbcType=VARCHAR},
		#{shopId,jdbcType=INTEGER}, #{bookCover,jdbcType=VARCHAR},
		#{bookDetail,jdbcType=LONGVARCHAR},
		#{bookImg,jdbcType=LONGVARCHAR},
		#{detailImg,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.freedom.boot.bean.BookWithBLOBs">
		insert into tp_book
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bookId != null">
				book_id,
			</if>
			<if test="bookName != null">
				book_name,
			</if>
			<if test="bookPrice != null">
				book_price,
			</if>
			<if test="bookTypeId != null">
				book_type_id,
			</if>
			<if test="bookCount != null">
				book_count,
			</if>
			<if test="bookAuthor != null">
				book_author,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="bookCover != null">
				book_cover,
			</if>
			<if test="bookDetail != null">
				book_detail,
			</if>
			<if test="bookImg != null">
				book_img,
			</if>
			<if test="detailImg != null">
				detail_img,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bookId != null">
				#{bookId,jdbcType=INTEGER},
			</if>
			<if test="bookName != null">
				#{bookName,jdbcType=VARCHAR},
			</if>
			<if test="bookPrice != null">
				#{bookPrice,jdbcType=DECIMAL},
			</if>
			<if test="bookTypeId != null">
				#{bookTypeId,jdbcType=INTEGER},
			</if>
			<if test="bookCount != null">
				#{bookCount,jdbcType=INTEGER},
			</if>
			<if test="bookAuthor != null">
				#{bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=INTEGER},
			</if>
			<if test="bookCover != null">
				#{bookCover,jdbcType=VARCHAR},
			</if>
			<if test="bookDetail != null">
				#{bookDetail,jdbcType=LONGVARCHAR},
			</if>
			<if test="bookImg != null">
				#{bookImg,jdbcType=LONGVARCHAR},
			</if>
			<if test="detailImg != null">
				#{detailImg,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.freedom.boot.bean.BookExample"
		resultType="java.lang.Long">
		select count(*) from tp_book
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tp_book
		<set>
			<if test="record.bookId != null">
				book_id = #{record.bookId,jdbcType=INTEGER},
			</if>
			<if test="record.bookName != null">
				book_name = #{record.bookName,jdbcType=VARCHAR},
			</if>
			<if test="record.bookPrice != null">
				book_price = #{record.bookPrice,jdbcType=DECIMAL},
			</if>
			<if test="record.bookTypeId != null">
				book_type_id = #{record.bookTypeId,jdbcType=INTEGER},
			</if>
			<if test="record.bookCount != null">
				book_count = #{record.bookCount,jdbcType=INTEGER},
			</if>
			<if test="record.bookAuthor != null">
				book_author = #{record.bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="record.shopId != null">
				shop_id = #{record.shopId,jdbcType=INTEGER},
			</if>
			<if test="record.bookCover != null">
				book_cover = #{record.bookCover,jdbcType=VARCHAR},
			</if>
			<if test="record.bookDetail != null">
				book_detail = #{record.bookDetail,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.bookImg != null">
				book_img = #{record.bookImg,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.detailImg != null">
				detail_img = #{record.detailImg,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update tp_book
		set book_id = #{record.bookId,jdbcType=INTEGER},
		book_name = #{record.bookName,jdbcType=VARCHAR},
		book_price =
		#{record.bookPrice,jdbcType=DECIMAL},
		book_type_id =
		#{record.bookTypeId,jdbcType=INTEGER},
		book_count =
		#{record.bookCount,jdbcType=INTEGER},
		book_author =
		#{record.bookAuthor,jdbcType=VARCHAR},
		shop_id =
		#{record.shopId,jdbcType=INTEGER},
		book_cover =
		#{record.bookCover,jdbcType=VARCHAR},
		book_detail =
		#{record.bookDetail,jdbcType=LONGVARCHAR},
		book_img =
		#{record.bookImg,jdbcType=LONGVARCHAR},
		detail_img =
		#{record.detailImg,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tp_book
		set book_id = #{record.bookId,jdbcType=INTEGER},
		book_name = #{record.bookName,jdbcType=VARCHAR},
		book_price =
		#{record.bookPrice,jdbcType=DECIMAL},
		book_type_id =
		#{record.bookTypeId,jdbcType=INTEGER},
		book_count =
		#{record.bookCount,jdbcType=INTEGER},
		book_author =
		#{record.bookAuthor,jdbcType=VARCHAR},
		shop_id =
		#{record.shopId,jdbcType=INTEGER},
		book_cover =
		#{record.bookCover,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.freedom.boot.bean.BookWithBLOBs">
		update tp_book
		<set>
			<if test="bookName != null">
				book_name = #{bookName,jdbcType=VARCHAR},
			</if>
			<if test="bookPrice != null">
				book_price = #{bookPrice,jdbcType=DECIMAL},
			</if>
			<if test="bookTypeId != null">
				book_type_id = #{bookTypeId,jdbcType=INTEGER},
			</if>
			<if test="bookCount != null">
				book_count = #{bookCount,jdbcType=INTEGER},
			</if>
			<if test="bookAuthor != null">
				book_author = #{bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=INTEGER},
			</if>
			<if test="bookCover != null">
				book_cover = #{bookCover,jdbcType=VARCHAR},
			</if>
			<if test="bookDetail != null">
				book_detail = #{bookDetail,jdbcType=LONGVARCHAR},
			</if>
			<if test="bookImg != null">
				book_img = #{bookImg,jdbcType=LONGVARCHAR},
			</if>
			<if test="detailImg != null">
				detail_img = #{detailImg,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where book_id = #{bookId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="org.freedom.boot.bean.BookWithBLOBs">
		update
		tp_book
		set book_name = #{bookName,jdbcType=VARCHAR},
		book_price =
		#{bookPrice,jdbcType=DECIMAL},
		book_type_id =
		#{bookTypeId,jdbcType=INTEGER},
		book_count =
		#{bookCount,jdbcType=INTEGER},
		book_author =
		#{bookAuthor,jdbcType=VARCHAR},
		shop_id = #{shopId,jdbcType=INTEGER},
		book_cover = #{bookCover,jdbcType=VARCHAR},
		book_detail =
		#{bookDetail,jdbcType=LONGVARCHAR},
		book_img =
		#{bookImg,jdbcType=LONGVARCHAR},
		detail_img =
		#{detailImg,jdbcType=LONGVARCHAR}
		where book_id =
		#{bookId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.freedom.boot.bean.Book">
		update tp_book
		set
		book_name = #{bookName,jdbcType=VARCHAR},
		book_price =
		#{bookPrice,jdbcType=DECIMAL},
		book_type_id =
		#{bookTypeId,jdbcType=INTEGER},
		book_count =
		#{bookCount,jdbcType=INTEGER},
		book_author =
		#{bookAuthor,jdbcType=VARCHAR},
		shop_id = #{shopId,jdbcType=INTEGER},
		book_cover = #{bookCover,jdbcType=VARCHAR}
		where book_id =
		#{bookId,jdbcType=INTEGER}
	</update>
</mapper>