<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.freedom.crud.dao.StudentClassMapper">
	<resultMap id="BaseResultMap" type="org.freedom.crud.bean.StudentClass">
		<id column="student_class_id" jdbcType="INTEGER" property="studentClassId" />
		<result column="student_id" jdbcType="INTEGER" property="studentId" />
		<result column="class_id" jdbcType="INTEGER" property="classId" />
	</resultMap>


	<resultMap id="AllResultMap" type="org.freedom.crud.bean.StudentClass">
		<id column="class_id" jdbcType="INTEGER" property="studentClassId" />
		<result column="student_id" jdbcType="INTEGER" property="studentId" />
		<association property="student" column="student_id"
			javaType="org.freedom.crud.bean.Student">
			<id column="student_id" property="studentId" />
			<result column="stu_name" property="name" />
		</association>

		<association property="stuClass" column="class_id"
			javaType="org.freedom.crud.bean.StuClass">
			<id column="class_id" property="classId" />
			<result column="class_name" property="className" />
			<collection property="course" column="class_id"
			ofType="org.freedom.crud.bean.Course">
			<id column="course_id" property="courseId" />
			<result column="course_name" property="name" />
			<result column="day" property="day" />
		</collection>
		</association>

	</resultMap>


	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		student_class_id, student_id, class_id
	</sql>

	<sql id="All_Column_List">
		c.class_id, s.`name`as
		'stu_name',s.student_id,co.name as 'course_name',co.day,co.course_id
	</sql>

	<select id="selectAllByExample" parameterType="org.freedom.crud.bean.StudentClassExample"
		resultMap="AllResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="All_Column_List" />
		from tbl_student s
		join
		tbl_student_class sc
		on s.student_id=sc.student_id
		join
		tbl_class c
		on c.class_id=sc.class_id
		join tbl_course co
		on c.class_id=co.class_id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>


	<select id="selectByExample" parameterType="org.freedom.crud.bean.StudentClassExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tbl_student_class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>


	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tbl_student_class
		where student_class_id =
		#{studentClassId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tbl_student_class
		where student_class_id =
		#{studentClassId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.freedom.crud.bean.StudentClassExample">
		delete from tbl_student_class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.freedom.crud.bean.StudentClass">
		insert into tbl_student_class
		(student_class_id, student_id, class_id
		)
		values
		(#{studentClassId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER},
		#{classId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.freedom.crud.bean.StudentClass">
		insert into tbl_student_class
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="studentClassId != null">
				student_class_id,
			</if>
			<if test="studentId != null">
				student_id,
			</if>
			<if test="classId != null">
				class_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="studentClassId != null">
				#{studentClassId,jdbcType=INTEGER},
			</if>
			<if test="studentId != null">
				#{studentId,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				#{classId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.freedom.crud.bean.StudentClassExample"
		resultType="java.lang.Long">
		select count(*) from tbl_student_class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tbl_student_class
		<set>
			<if test="record.studentClassId != null">
				student_class_id =
				#{record.studentClassId,jdbcType=INTEGER},
			</if>
			<if test="record.studentId != null">
				student_id = #{record.studentId,jdbcType=INTEGER},
			</if>
			<if test="record.classId != null">
				class_id = #{record.classId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tbl_student_class
		set student_class_id =
		#{record.studentClassId,jdbcType=INTEGER},
		student_id =
		#{record.studentId,jdbcType=INTEGER},
		class_id =
		#{record.classId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.freedom.crud.bean.StudentClass">
		update tbl_student_class
		<set>
			<if test="studentId != null">
				student_id = #{studentId,jdbcType=INTEGER},
			</if>
			<if test="classId != null">
				class_id = #{classId,jdbcType=INTEGER},
			</if>
		</set>
		where student_class_id = #{studentClassId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.freedom.crud.bean.StudentClass">
		update
		tbl_student_class
		set student_id = #{studentId,jdbcType=INTEGER},
		class_id = #{classId,jdbcType=INTEGER}
		where student_class_id =
		#{studentClassId,jdbcType=INTEGER}
	</update>
</mapper>